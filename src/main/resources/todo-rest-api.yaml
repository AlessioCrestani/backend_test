openapi: "3.0.0"
info:
  version: 0.0.1
  title: Todo List
servers:
  - url: http://127.0.0.1:12000
tags:
  - name: todo
  - name: task
paths:
  /todos:
    get:
      summary: Get a todo
      tags:
        - todo
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - id
              properties:
                id:
                  type: integer
                  format: int64
      responses:
        '200':
          description: get todos response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Todo"
    put:
      summary: Create a todo
      tags:
        - todo
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
      responses:
        '200':
          description: creation response
          content:
            application/json:
              schema:
                type: boolean
  /tasks:
    get:
      summary: Get a list of tasks
      tags:
        - task
      parameters:
        - name: todoId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: get tasks response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Task"

    post:
      summary: Create a new task
      tags:
        - task
      requestBody:
        $ref: "#/components/requestBodies/TaskRequest"
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                type: boolean
  /tasks/{taskId}:
    post:
      summary: Update an existing task
      tags:
        - task
      requestBody:
        description: request
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - isDone
              properties:
                isDone:
                  type: boolean
      parameters:
        - name: taskId
          in: path
          required: true
          description: The id of the task
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                type: boolean
components:
  requestBodies:
    TaskRequest:
      description: new task
      content:
        application/json:
          schema:
            type: object
            required:
              - todoId
              - description
            properties:
              todoId:
                type: string
              description:
                type: string
  schemas:
    Todo:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        creation:
          type: string
        numberOfTasks:
          type: integer
          format: int64
    Task:
      type: object
      required:
        - todoId
        - description
      properties:
        taskId:
          type: integer
          format: int64
        todoId:
          type: integer
          format: int64
        description:
          type: string
        isDone:
          type: boolean
